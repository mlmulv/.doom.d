#+TITLE: Doom Emacs Config
#+AUTHOR: Markus Mulvihill
#+DESCRIPTION: My emacs config setup
#+PROPERTY: header-args:emacs-lisp :tangle config.el

#+begin_src emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-
#+end_src

#+RESULTS:

* Configuring Paths
** Configuring Emacs PATH
This is needed for Doom Emacs my path where GCC and G++ are installed

#+begin_src emacs-lisp
(setq exec-path (append exec-path '("C:\\msys64\\mingw64\\bin")))
(setenv "PATH" (concat "C:\\msys64\\mingw64\\bin;" (getenv "PATH")))
#+end_src

#+RESULTS:
: C:\msys64\mingw64\bin;C:\msys64\mingw64\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Bitvise SSH Client;C:\msys64\mingw64\bin;C:\Users\Markus Mulvihill\AppData\Local\Programs\MiKTeX\miktex\bin\x64;C:\Users\Markus Mulvihill\AppData\Local\ActiveState\cache\bin;C:\Users\Markus Mulvihill\AppData\Local\activestate\cache\bin;C:\Users\Markus Mulvihill\AppData\Local\ActiveState\StateTool\release\bin;C:\Users\Markus Mulvihill\AppData\Local\Microsoft\WindowsApps;C:\Users\Markus Mulvihill\AppData\Local\GitHubDesktop\bin;C:\Users\Markus Mulvihill\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Markus Mulvihill\.emacs.d\bin;C:\Users\Markus Mulvihill\emacs-29.2_1\bin;C:\Users\Markus Mulvihill\anaconda3\condabin;C:\Users\Markus Mulvihill\AppData\Local\Programs\MiKTeX\miktex\bin\x64\;C:\Users\Markus Mulvihill\AppData\Local\Microsoft\WinGet\Packages\JesseDuffield.lazygit_Microsoft.Winget.Source_8wekyb3d8bbwe;


** My Org Path
I use the default '~/org/' path to save all the my org files

#+begin_src emacs-lisp
(setq org-directory "~/org/")
 #+end_src

* Configuring UI Stuff
** Adding Relative Lines
I included relative lines to be displayed on the left of the screen.

#+begin_src emacs-lisp
(setq display-line-numbers-type 'relative)
#+end_src
** Dracula Theme
 Here I am adding my a custom theme called Dracula, where i added the **dracula-theme.el** to a directory
 in '~/.emacs.d/'

 #+begin_src emacs-lisp
 (add-to-list 'custom-theme-load-path "~/.emacs.d/themes")
 (load-theme 'dracula t)
 #+end_src

** Neotree
I will be using Neotree as a file structure navigation tool. It will act as a visual of your project layout

#+begin_src emacs-lisp
(add-to-list 'load-path "~/.emacs.d/neotree")
(require 'neotree)
(global-set-key [f8] 'neotree-toggle)
#+end_src

#+RESULTS:
: neotree-toggle

** Org-superstar:
Instead of using the default Doom Emacs '*' for the markers, I will be adding in org-superstar instead.

#+begin_src emacs-lisp
(add-to-list 'load-path "~/.emacs.d/org-superstar")
(require 'org-superstar)

;;; Titles and Sections
;; hide #+TITLE:
(setq org-hidden-keywords '(title))
;; set basic title font
(set-face-attribute 'org-level-8 nil :weight 'bold :inherit 'default)
;; Low levels are unimportant => no scaling
(set-face-attribute 'org-level-7 nil :inherit 'org-level-8)
(set-face-attribute 'org-level-6 nil :inherit 'org-level-8)
(set-face-attribute 'org-level-5 nil :inherit 'org-level-8)
(set-face-attribute 'org-level-4 nil :inherit 'org-level-8)
;; Top ones get scaled the same as in LaTeX (\large, \Large, \LARGE)
(set-face-attribute 'org-level-3 nil :inherit 'org-level-8 :height 1.2) ;\large
(set-face-attribute 'org-level-2 nil :inherit 'org-level-8 :height 1.44) ;\Large
(set-face-attribute 'org-level-1 nil :inherit 'org-level-8 :height 1.728) ;\LARGE
;; Only use the first 4 styles and do not cycle.
(setq org-cycle-level-faces nil)
(setq org-n-level-faces 4)
;; Document Title, (\huge)
(set-face-attribute 'org-document-title nil
                    :height 2.074
                    :foreground 'unspecified
                    :inherit 'org-level-8)

;;; Basic Setup
;; Auto-start Superstar with Org
(add-hook 'org-mode-hook
          (lambda ()
            (org-superstar-mode 1)))                
#+end_src

#+RESULTS:
| (lambda nil (org-superstar-mode 1)) | er/add-org-mode-expansions | #[0 \301\211\207 [imenu-create-index-function org-imenu-get-tree] 2] | org-autolist-mode | (closure (t) nil (org-superstar-mode 1)) | +lookup--init-org-mode-handlers-h | (closure (t) (&rest _) (add-hook 'before-save-hook 'org-encrypt-entries nil t)) | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-fold-show-all append local] 5] | doom-disable-show-paren-mode-h | doom-disable-show-trailing-whitespace-h | +org-make-last-point-visible-h | evil-org-mode | org-eldoc-load | toc-org-enable | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-babel-show-result-all append local] 5] | org-babel-result-hide-spec | org-babel-hide-all-hashes | embrace-org-mode-hook | (closure (t) nil (org-autolist-mode)) |

 
** Adding bold and italic
 In this line I enabled bold and italics to appear in code and comments. This also
 includes the '/' and '*' to not appear around the work or comment.

 #+begin_src emacs-lisp
(after! doom-themes
  (setq doom-themes-enable-bold t
        doom-themes-enable-italic t))
(custom-set-faces!
  '(font-lock-comment-face :slant italic)
  '(font-lock-keyword :slant italic))
#+end_src

** Having Bullet Auto-list
#+begin_src emacs-lisp
(use-package org-autolist
  :hook (org-mode . org-autolist-mode))
#+end_src

#+RESULTS:
| org-autolist-mode | er/add-org-mode-expansions | +lookup--init-org-mode-handlers-h | (closure (t) (&rest _) (add-hook 'before-save-hook 'org-encrypt-entries nil t)) | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-fold-show-all append local] 5] | #[0 \301\211\207 [imenu-create-index-function org-imenu-get-tree] 2] | (closure (t) nil (org-bullets-mode 1)) | doom-disable-show-paren-mode-h | doom-disable-show-trailing-whitespace-h | +org-make-last-point-visible-h | evil-org-mode | org-eldoc-load | toc-org-enable | #[0 \300\301\302\303\304$\207 [add-hook change-major-mode-hook org-babel-show-result-all append local] 5] | org-babel-result-hide-spec | org-babel-hide-all-hashes | embrace-org-mode-hook |

* Development

** Language Servers
To begin using languages that do not have built in lsp into emacs we must enable lsp to enable emacs to communicate with the language server.

#+begin_src emacs-lisp
(use-package lsp-mode
:commands (lsp lsp-deferred)
:init
(setq lsp-keymap-prefix "C-c l") ;; Control l for lsp-mode
:config
(lsp-enable-which-key-integration t)) ;; descriptions for key bindings
#+end_src

#+RESULTS:

** Completion with Company Mode

#+begin_src emacs-lisp
(use-package company
  :after lsp-mode
  :hook (lsp-mode . company-mode)
  :bind (:map company-active-map
         ("<tab>" . company-complete-selection))
        (:map lsp-mode-map
         ("<tab>" . company-indent-or-complete-common))
  :custom
  (company-minimum-prefix-length 1)
  (company-idle-delay 0.0))

(use-package company-box
  :hook (company-mode . company-box-mode))
#+end_src

#+RESULTS:
| evil-normalize-keymaps | company-mode-set-explicitly | company-box-mode |
